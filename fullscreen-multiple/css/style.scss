/*Define max function */

@function max($numbers...) {
  @return m#{a}x(#{$numbers});
}

// Unused class, only to include the assets in the build
#sampleBgs {
  background-image: url('../assets/images/sample-image-1.png');
}

body#popupTemplate.backdrop {
  background-color: rgba(0, 0, 0, 0.55);
}

.multiFullcreenTemplate {
  box-sizing: border-box;
  display: flex;
  flex: 1;
  flex-wrap: nowrap;
  height: 100%;
  overflow: hidden;
  width: 100%;
  position: relative;

  .pageContainer {
    box-shadow: 0 0 10px 1px rgba(71, 71, 71, 0.5);
    box-sizing: border-box;
    display: flex;
    opacity: 1;
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    transition: opacity 0.05s linear, transform 0.15s ease-in-out;

    &--current {
      transform: translateX(0);
    }

    &--previous,
    &--next {
      opacity: 0;
    }

    &--previous {
      transform: translateX(calc(-100% - 2em));
    }

    &--next {
      transform: translateX(calc(100% + 2em));
    }

    .page {
      align-items: center;
      background-color: #FFFFFF;
      box-sizing: border-box;
      display: flex;
      flex-direction: column;
      flex: 0 0 100%;
      justify-content: center;
      margin-left: 0;
      overflow: hidden;
      padding: 30px 1em 35px;
      position: relative;

      &__contents {
        box-sizing: border-box;
        display: block;
        max-height: 100%;
        overflow: auto;
        padding: 5px 0;
        width: 100%;
      }

      &__image {
        background-position: center;
        background-repeat: no-repeat;
        background-size: contain;
        border-radius: 10px 10px 0 0;
        display: none;
        height: 125px;
        margin-bottom: 1em;
      }

      &__icon {
        align-items: center;
        display: flex;
        flex: 100%;
        justify-content: center;
        margin-top: 1em;

        svg {
          height: 4em;
          width: 5em;
        }
      }

      &__title,
      &__body {
        align-items: center;
        display: flex;
        justify-content: center;
        text-align: center;
        margin-top: auto;

        span {
          word-break: break-word;
        }
      }

      &__title {
        line-height: 25px;
        font-weight: 600;
      }

      &__body {
        line-height: 20px;
        margin-top: 1em;
      }

      &__buttons {
        align-items: center;
        display: flex;
        justify-content: center;
        margin-top: 1em;
      }
    }

    .pageSelector {
      left: 0;
      bottom: 0;
      box-sizing: border-box;
      display: flex;
      height: 30px;
      justify-content: center;
      padding-top: 2px;
      position: absolute;
      width: 100%;

      .nodeContainer {
        align-self: flex-start;
        cursor: pointer;
        padding: 5px;

        .node {
          background-color: #ccc;
          border-radius: 5px;
          height: 10px;
          width: 10px;
        }
      }
    }
  }
}

.deeplinkFrame {
  background-color: #FFFFFF;
  height: 100%;
  opacity: 0;
  position: absolute;
  transition: opacity 0.1s linear;
  width: 100%;
  z-index: 1;
}

.closeButton {
  cursor: pointer;
  position: absolute;
  right: 0.5em;
  top: 0.5em;
  z-index: 2;

  svg {
    height: 20px;
    width: 20px;
  }
}

/* Small devices (portrait tablets and large phones, 600px and up) */
@media only screen and (min-width: 600px) {
  .defaultTemplate .defaultTemplate__title,
  .defaultTemplate .defaultTemplate__body {
    margin-top: 1.5em;

    span {
      max-width: 400px;
    }
  }
}

// support for iOS with safe area not defined (iOS < 11)
@supports (-webkit-overflow-scrolling: touch) {
  @media only screen and (orientation: portrait) {
    .closeButton {
      top: 1.5em;
    }
  }
  /* Medium devices (tablets, 768px and up) */
  @media only screen and (min-device-width: 768px) {
    .closeButton {
      top: 1.5em;
    }
  }
}

// iOS < 11.2
@supports(padding-top: constant(safe-area-inset-top)) {
  .multiFullcreenTemplate {
    .pageContainer {
      padding-left: constant(safe-area-inset-left);
      padding-right: constant(safe-area-inset-right);
      padding-top: constant(safe-area-inset-top);
      padding-bottom: constant(safe-area-inset-bottom);
    }
  }

  @media only screen and (orientation: portrait) {
    .closeButton {
      top: calc(.5em + constant(safe-area-inset-top));
      right: calc(.5em + constant(safe-area-inset-right));
    }
  }

  // iPhone X
  @media only screen and (device-height: 812px) and (device-width: 375px){

    @media only screen and (orientation: portrait) {
      .closeButton {
        top: calc(.5em + constant(safe-area-inset-top));
        right: calc(.5em + constant(safe-area-inset-right));
      }
    }

    @media only screen and (orientation: landscape) {
      .closeButton {
        top: calc(.5em + constant(safe-area-inset-top));
        right: calc(.5em + constant(safe-area-inset-right));
      }
    }

    .multiFullcreenTemplate {
      .pageContainer {
        .pageSelector {
          height: calc(30px + constant(safe-area-inset-bottom));
        }
      }
    }
  }
}

// iOS >= 11.2
@supports(padding: max(0px)) {
  .multiFullcreenTemplate {
    .pageContainer {
      padding-left: env(safe-area-inset-left);
      padding-right: env(safe-area-inset-right);
      padding-top: env(safe-area-inset-top);
      padding-bottom: env(safe-area-inset-bottom);

      .pageSelector {
        height: calc(30px + env(safe-area-inset-bottom));
      }
    }
  }
  .closeButton {
    right: calc(.5em + env(safe-area-inset-right));
    top: calc(.5em + env(safe-area-inset-top));
  }
}
